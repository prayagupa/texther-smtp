
buildscript {
    ext.kotlin_version = '1.9.0-Beta'
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.24.16'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'application'
    id 'org.springframework.boot' version '2.6.6'
    id "name.remal.sonarlint" version "1.5.0"
    id "org.jetbrains.kotlin.jvm" version "1.8.21"
}

apply plugin: 'maven-publish'
apply plugin: 'kotlin'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'io.spring.dependency-management'

group 'com.lamatola.tellher-smtp'
description 'Tell her SMTP'

version = project.findProperty('projectVersion') ?: '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

processResources {
    expand(project.properties)
}

application {
    mainClassName = 'com.lamatola.Tellher'
}

dependencies {

    compileOnly(group: 'org.projectlombok', name: 'lombok', version: '1.18.20')
    runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-layout-template-json', version: '2.19.0'

    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.3.25'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.8'

    implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.4')
    implementation(group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.11.4')

    implementation(group: 'org.springframework.boot', name: 'spring-boot', version: '2.7.8')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.7.8')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.7.8') {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }

    implementation group: 'com.criteo', name: 'criteo-api-retailmedia-sdk', version: '2023.01.0.230411'

    //database
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: '2.7.8') {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }

    // AWS SDK
    implementation(group: 'software.amazon.awssdk', name: 'secretsmanager', version: '2.19.28')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.6') {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.7.4'

    implementation group: 'com.google.cloud', name: 'google-cloud-pubsub', version: '1.115.0'
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'


    implementation platform('software.amazon.awssdk:bom:2.20.56')
    implementation 'software.amazon.awssdk:s3:'
    implementation 'software.amazon.awssdk:sso'
    implementation 'software.amazon.awssdk:ssooidc'
    implementation 'software.amazon.awssdk:sesv2'

}


repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "${artifactory_contextUrl}/libs-release-local-origin"
        credentials {
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
    }
    maven {
        url "${artifactory_contextUrl}/libs-snapshot-local-origin"
        credentials {
            username = "${artifactory_user}"
            password = "${artifactory_password}"
        }
    }
}

artifactory {
    contextUrl = System.getenv("artifactory_contextUrl") ?: "${artifactory_contextUrl}"
    publish {
        repository {
            def releasesRepoKey = 'libs-release-local-origin'
            def snapshotsRepoKey = 'libs-snapshot-local-origin'

            repoKey = version.endsWith('SNAPSHOT') ? snapshotsRepoKey : releasesRepoKey
            username = System.getenv("artifactory_user") ?: "${artifactory_user}"
            password = System.getenv("artifactory_password") ?: "${artifactory_password}"
            maven = true
        }

        defaults {
            publications('mavenJava')
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

test {
    useJUnitPlatform()
}

configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf {
            it.buildDependencies.getDependencies(null).contains(jar)
        }
        it.outgoing.artifact(bootJar)
    }

    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

jar {
    archiveClassifier=''
    enabled = false
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
